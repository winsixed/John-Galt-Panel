#!/bin/bash

# –¶–≤–µ—Ç–∞
bold=$(tput bold)
normal=$(tput sgr0)
red=$(tput setaf 1)
green=$(tput setaf 2)
yellow=$(tput setaf 3)
blue=$(tput setaf 4)
cyan=$(tput setaf 6)
reset=$(tput sgr0)

log_action() {
  mkdir -p logs
  echo "[$(date +'%Y-%m-%d %H:%M:%S')] $1" >> logs/panel.log
}

case "$1" in
  frontend:build)
    echo "üîß –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ (SSR)..."
    cd frontend

    echo "‚ñ∂Ô∏è –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ patch.diff..."
    git pull origin main
    if [ -f patch.diff ]; then
      git apply patch.diff && echo "‚úÖ –ü–∞—Ç—á –ø—Ä–∏–º–µ–Ω—ë–Ω"
      rm -f patch.diff
    else
      echo "‚ö†Ô∏è  patch.diff –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi

    npm install
    npm run build

    echo "üßπ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ SSR-—Å–µ—Ä–≤–µ—Ä–∞ —á–µ—Ä–µ–∑ pm2..."
    pm2 delete john-galt-frontend || true
    pm2 start npm --name john-galt-frontend -- start

    exit 0
    ;;
esac

while true; do
  clear
  echo "============================================"
  echo "   üöÄ ${bold}DevOps –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º${normal}"
  echo "============================================"

  echo "${bold}[1-10] FRONTEND${normal}"
  echo " 1. ‚ùå –í—ã–π—Ç–∏"
  echo " 2. üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (npm install)"
  echo " 3. ‚öôÔ∏è  –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ (npm run build)"
  echo " 4. üîÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å SSR (pm2 restart john-galt-frontend)"
  echo " 5. üìÑ –õ–æ–≥–∏ SSR (pm2 logs john-galt-frontend)"
  echo " 6. üöÄ –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ (npm install + build + pm2 restart)"

  echo "${bold}[11-20] BACKEND${normal}"
  echo "11. üêç –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å backend (systemctl restart web_panel)"
  echo "12. üìä –°—Ç–∞—Ç—É—Å backend –∏ nginx"
  echo "13. üßæ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ Gunicorn"
  echo "14. üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ API /api/inventory/"
  echo "15. üì§ –î–∞–º–ø PostgreSQL (pg_dump ‚Üí dumps/)"
  echo "16. üì• –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–º–ø–∞ (–∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–∞–º–ø–∞)"
  echo "17. üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ .env –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö"
  echo "18. üí¨ Telegram Token –∏–∑ .env"
  echo "19. üì¨ –õ–æ–≥ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π Telegram"
  echo "20. üöÄ GitHub Actions Webhook Trigger"

  echo "${bold}[21-30] GIT –ò –°–¶–ï–ù–ê–†–ò–ò${normal}"
  echo "21. üîÅ Git Pull (–æ–±–Ω–æ–≤–∏—Ç—å main)"
  echo "22. üì§ Git Push (commit + push)"
  echo "23. üîñ –°–æ–∑–¥–∞—Ç—å Git Tag (—Ä—É—á–Ω–æ–π –≤–≤–æ–¥)"
  echo "24. ‚¨ÜÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ —Ç–µ–≥–∏ (git push --tags)"
  echo "25. üßπ –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ç–µ–≥–∏ (–∏ —Å origin)"
  echo "26. üìÑ –ü—Ä–∏–º–µ–Ω–∏—Ç—å patch.diff (–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ SSR)"
  echo "27. üöÄ DEPLOY-FULL (–∑–∞–ø—É—Å–∫ deploy-full.sh)"
  echo "28. üßØ ROLLBACK (–æ—Ç–∫–∞—Ç rollback.sh)"
  echo "29. üìú –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–∞ –ø–∞–Ω–µ–ª–∏"
  echo "30. üß∞ –ê—Ä—Ö–∏–≤ –ø—Ä–æ–µ–∫—Ç–∞ (tar.gz –≤ backups/)"

  echo "${bold}[31-40] –ú–û–ù–ò–¢–û–†–ò–ù–ì –ò –£–¢–ò–õ–ò–¢–´${normal}"
  echo "31. üîÅ pm2 list (–ø—Ä–æ—Ü–µ—Å—Å—ã pm2)"
  echo "32. üêç ps aux | grep python (–ø—Ä–æ—Ü–µ—Å—Å—ã Python)"
  echo "33. üîç ss -tulnp (–ø—Ä–æ—Å–ª—É—à–∏–≤–∞–µ–º—ã–µ –ø–æ—Ä—Ç—ã)"
  echo "34. üõ°Ô∏è –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å web_panel.service"
  echo "35. üíæ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–∞ –∏ –ø–∞–º—è—Ç–∏"
  echo "36. ‚öôÔ∏è  –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å nginx config"
  echo "37. ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É–±–ª–∏—á–Ω–æ–≥–æ —Å–∞–π—Ç–∞"
  echo "38. üßº –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤ –ø–∞–Ω–µ–ª–∏"
  echo "39. üïí –ù–∞—Å—Ç—Ä–æ–∏—Ç—å cron-–±—ç–∫–∞–ø"
  echo "40. ‚è≥ –í—ã—Ö–æ–¥"

  echo "============================================"
  read -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: " choice

  case $choice in
    1) exit 0 ;;
    2) npm install ;;
    3) npm run build ;;
    4) pm2 restart john-galt-frontend ;;
    5) pm2 logs john-galt-frontend ;;
    6) npm install && npm run build && pm2 restart john-galt-frontend ;;
    11) sudo systemctl restart web_panel ;;
    12) systemctl status web_panel --no-pager; systemctl status nginx --no-pager; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
    13) journalctl -u web_panel.service -n 20 --no-pager; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
    14) curl -s -o /dev/null -w "HTTP: %{http_code}\n" http://127.0.0.1:8000/api/inventory/; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
    15) mkdir -p dumps && pg_dump -U postgres -d your_dbname > dumps/dump_$(date +%F_%T).sql && echo "‚úÖ –î–∞–º–ø —Å–æ–∑–¥–∞–Ω"; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
    16) latest_dump=$(ls -t dumps/*.sql | head -n 1); psql -U postgres -d your_dbname < "$latest_dump"; echo "‚úÖ –î–∞–º–ø –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $latest_dump"; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
    17)
      echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ .env –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö:"
      test -f .env && source .env
      for var in POSTGRESQL_HOST POSTGRESQL_PORT POSTGRESQL_USER POSTGRESQL_DBNAME; do
        val=$(grep "^$var=" .env | cut -d= -f2)
        if [ -z "$val" ]; then echo "‚ùå $var –Ω–µ –∑–∞–¥–∞–Ω"; else echo "‚úÖ $var = $val"; fi
      done
      read -p "–ù–∞–∂–º–∏—Ç–µ Enter..."
      ;;
    18) grep TELEGRAM_TOKEN .env; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
    19) tail -n 20 logs/telegram.log; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
    20) curl -X POST https://api.github.com/repos/YOUR_USER/YOUR_REPO/dispatches -H "Accept: application/vnd.github.v3+json" -H "Authorization: token YOUR_TOKEN" -d '{"event_type":"deploy"}'; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
    21) git pull origin main; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
    22)
      git add .
      read -p "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∫–æ–º–º–∏—Ç—É: " msg
      git commit -m "${msg:-auto-commit $(date)}"
      git push origin main
      read -p "–ù–∞–∂–º–∏—Ç–µ Enter..."
      ;;
    23) read -p "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–≥: " tag; git tag "$tag"; echo "‚úÖ –¢–µ–≥ —Å–æ–∑–¥–∞–Ω: $tag"; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
    24) git push origin --tags; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
    25) git tag | xargs git tag -d; git push origin --delete $(git tag); read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
    26)
      echo "‚ñ∂Ô∏è –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ patch.diff..."
      git pull origin main
      if [ -f patch.diff ]; then
        git apply patch.diff && echo "‚úÖ –ü–∞—Ç—á –ø—Ä–∏–º–µ–Ω—ë–Ω"
        rm -f patch.diff
      else
        echo "‚ö†Ô∏è  patch.diff –Ω–µ –Ω–∞–π–¥–µ–Ω"
      fi
      npm install && npm run build
      pm2 restart john-galt-frontend
      read -p "–ù–∞–∂–º–∏—Ç–µ Enter..."
      ;;
    27) ./deploy-full.sh; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
    28) ./rollback.sh; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
    29) less logs/panel.log ;;
    30)
      mkdir -p ../backups
      tar czf ../backups/project_$(date +%F_%H%M%S).tar.gz .
      echo "‚úÖ –ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω"
      read -p "–ù–∞–∂–º–∏—Ç–µ Enter..."
      ;;
    31) pm2 list; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
    32) ps aux | grep python; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
    33) ss -tulnp; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
    34)
      status=$(systemctl is-active web_panel)
      if [ "$status" = "active" ]; then
        echo "‚úÖ web_panel.service –∞–∫—Ç–∏–≤–µ–Ω"
      else
        echo "‚ùå web_panel.service –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω –∏–ª–∏ —É–ø–∞–ª"
      fi
      read -p "–ù–∞–∂–º–∏—Ç–µ Enter..."
      ;;
    35) df -h | grep /$; free -h; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
    36) sudo nano /etc/nginx/sites-available/default ;;
    37) curl -s -o /dev/null -w "HTTP: %{http_code}\n" http://localhost; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
    38) rm -f logs/*.log && echo "‚úÖ –õ–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã"; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
    39) echo "‚è± –î–æ–±–∞–≤—å cron-–±—ç–∫–∞–ø –≤—Ä—É—á–Ω—É—é: crontab -e"; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
    40) exit 0 ;;
    *) echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞"; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
  esac

  log_action "–í—ã–ø–æ–ª–Ω–µ–Ω–æ: $choice"
done
